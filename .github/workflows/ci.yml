name: CI / Lint / Build / Deploy

on:
  push:
    branches: ["**"]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  packages: write   # нужно для ghcr push

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8
      - name: Lint
        run: flake8 . --max-line-length=100
      - name: Tests
        run: pytest -q

  build-and-push-image:
    # запустится только если линт/тесты ок
    needs: lint-and-test
    # не пушим образы из pull_request (чтобы не светить секреты) — строим только на push/workflow_dispatch
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set lowercase repo
        id: lc
        run: echo "repo_lc=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push (SHA + branch tag)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ steps.lc.outputs.repo_lc }}:sha-${{ github.sha }}
            ghcr.io/${{ steps.lc.outputs.repo_lc }}:branch-${{ github.ref_name }}

      - name: Also tag latest on main
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ steps.lc.outputs.repo_lc }}:latest
          # используем кэш предыдущего билда в том же ранe
          cache-from: type=registry,ref=ghcr.io/${{ steps.lc.outputs.repo_lc }}:sha-${{ github.sha }}
          cache-to: type=inline

  ssh-deploy:
    needs: build-and-push-image
    if: needs.build-and-push-image.result == 'success' && secrets.DEPLOY_SSH_HOST != ''
    runs-on: ubuntu-latest
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DEPLOY_SSH_HOST }}
          username: ${{ secrets.DEPLOY_SSH_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.DEPLOY_SSH_PORT || 22 }}
          script: |
            set -e
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            docker pull ghcr.io/${{ github.repository }}/:sha-${{ github.sha }}
            docker stop tg-ig-bot || true
            docker rm tg-ig-bot || true
            docker run -d --name tg-ig-bot --restart unless-stopped \
              --env-file /opt/tg-ig-bot/.env -p 8080:8080 \
              ghcr.io/${{ github.repository }}:sha-${{ github.sha }}
